generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model advertising_company {
  id                                                                            Int                @id @default(autoincrement())
  name                                                                          String             @db.VarChar(255)
  status                                                                        Int?               @default(1)
  url_code_setting_id                                                           Int?
  url_code_setting                                                              url_code_setting?  @relation(fields: [url_code_setting_id], references: [id], map: "advertising_company_ibfk_1")
  url_code_setting_url_code_setting_advertising_company_idToadvertising_company url_code_setting[] @relation("url_code_setting_advertising_company_idToadvertising_company")

  @@index([url_code_setting_id], map: "url_code_setting_id")
}

model click {
  id       Int     @id @default(autoincrement())
  url_code String? @db.VarChar(255)
  ip       String? @db.VarChar(255)

  @@unique([url_code, ip], map: "url_code_ip")
}

model customor_db {
  id                                                                 Int               @id @default(autoincrement())
  dividend_status                                                    String?           @db.VarChar(5)
  date                                                               DateTime?         @db.Timestamp(0)
  name                                                               String?           @db.VarChar(50)
  phone                                                              String            @db.VarChar(20)
  initial_status                                                     String?           @db.VarChar(50)
  no_answer_count                                                    Int?              @default(0)
  recall_request_at                                                  DateTime?         @db.Timestamp(0)
  reservation_date                                                   DateTime?         @db.Timestamp(0)
  visit_status                                                       String?           @db.VarChar(50)
  url_code                                                           String?           @db.VarChar(255)
  created_at                                                         DateTime?         @default(now()) @db.Timestamp(0)
  data_status                                                        Int?              @default(0) @db.TinyInt
  url_code_setting_id                                                Int?
  url_code_setting_customor_db_url_code_setting_idTourl_code_setting url_code_setting? @relation("customor_db_url_code_setting_idTourl_code_setting", fields: [url_code_setting_id], references: [id], map: "fk_customor_url_code_setting")
  url_code_setting_customor_db_url_codeTourl_code_setting            url_code_setting? @relation("customor_db_url_codeTourl_code_setting", fields: [url_code], references: [url_code], onDelete: NoAction, onUpdate: NoAction, map: "fk_url_code")

  @@unique([phone, url_code], map: "phone_url_code_unique")
  @@index([url_code_setting_id], map: "fk_customor_url_code_setting")
  @@index([url_code], map: "fk_url_code")
}

model event_name {
  id                                                          Int                @id @default(autoincrement())
  name                                                        String             @db.VarChar(255)
  status                                                      Int                @default(1)
  url_code_setting_id                                         Int?
  url_code_setting                                            url_code_setting?  @relation(fields: [url_code_setting_id], references: [id], map: "event_name_ibfk_1")
  url_code_setting_url_code_setting_event_name_idToevent_name url_code_setting[] @relation("url_code_setting_event_name_idToevent_name")

  @@index([url_code_setting_id], map: "url_code_setting_id")
}

model funnels_db {
  id         Int       @id @default(autoincrement())
  apply      String?   @db.VarChar(30)
  region     String?   @db.VarChar(10)
  name       String?   @db.VarChar(20)
  phone      String?   @db.VarChar(20)
  revenue    String?   @db.VarChar(20)
  memo       String?   @db.Text
  privacy    String?   @default("0") @db.VarChar(5)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  service    String?   @db.VarChar(30)
}

model hospital_name {
  id                                                                Int                @id @default(autoincrement())
  name                                                              String             @db.VarChar(255)
  status                                                            Int?               @default(1)
  url_code_setting_id                                               Int?
  manager                                                           String?            @db.VarChar(60)
  hospital_code                                                     String             @db.VarChar(60)
  url_code_setting                                                  url_code_setting?  @relation(fields: [url_code_setting_id], references: [id], map: "hospital_name_ibfk_1")
  url_code_setting_url_code_setting_hospital_name_idTohospital_name url_code_setting[] @relation("url_code_setting_hospital_name_idTohospital_name")
  user                                                              user[]

  @@index([url_code_setting_id], map: "url_code_setting_id")
}

model url_code_setting {
  id                                                                               Int                   @id @default(autoincrement())
  user_id                                                                          Int
  url_code                                                                         String                @unique(map: "url_code_unique") @db.VarChar(255)
  db_request_count                                                                 Int?                  @default(0)
  db_click_count                                                                   Int?                  @default(0)
  created_at                                                                       DateTime?             @default(now()) @db.Timestamp(0)
  updated_at                                                                       DateTime?             @default(now()) @db.Timestamp(0)
  ad_title                                                                         String                @db.VarChar(255)
  ad_number                                                                        String                @db.VarChar(50)
  event_name_id                                                                    Int?
  hospital_name_id                                                                 Int?
  advertising_company_id                                                           Int?
  ad_spending                                                                      ad_spending[]
  advertising_company                                                              advertising_company[]
  customor_db_customor_db_url_code_setting_idTourl_code_setting                    customor_db[]         @relation("customor_db_url_code_setting_idTourl_code_setting")
  customor_db_customor_db_url_codeTourl_code_setting                               customor_db[]         @relation("customor_db_url_codeTourl_code_setting")
  event_name                                                                       event_name[]
  hospital_name                                                                    hospital_name[]
  advertising_company_url_code_setting_advertising_company_idToadvertising_company advertising_company?  @relation("url_code_setting_advertising_company_idToadvertising_company", fields: [advertising_company_id], references: [id], map: "fk_url_code_setting_advertising_company")
  event_name_url_code_setting_event_name_idToevent_name                            event_name?           @relation("url_code_setting_event_name_idToevent_name", fields: [event_name_id], references: [id], map: "fk_url_code_setting_event_name")
  hospital_name_url_code_setting_hospital_name_idTohospital_name                   hospital_name?        @relation("url_code_setting_hospital_name_idTohospital_name", fields: [hospital_name_id], references: [id], map: "fk_url_code_setting_hospital_name")

  @@index([advertising_company_id], map: "fk_url_code_setting_advertising_company")
  @@index([event_name_id], map: "fk_url_code_setting_event_name")
  @@index([hospital_name_id], map: "fk_url_code_setting_hospital_name")
}

model user {
  user_id          Int            @id @default(autoincrement())
  username         String         @unique(map: "username") @db.VarChar(255)
  password         String         @db.VarChar(255)
  name             String         @db.VarChar(255)
  role             Int?
  is_active        Boolean?       @default(true)
  created_at       DateTime?      @default(now()) @db.Timestamp(0)
  updated_at       DateTime?      @default(now()) @db.Timestamp(0)
  hospital_name_id Int?
  ad_spending      ad_spending[]
  notice_board     notice_board[]
  hospital_name    hospital_name? @relation(fields: [hospital_name_id], references: [id], onUpdate: NoAction, map: "fk_hospital_name")
  user_settings    user_settings?

  @@index([hospital_name_id], map: "fk_hospital_name")
}

model user_settings {
  user_id                   Int     @id
  customer_data_settings    String? @db.VarChar(255)
  advertising_data_settings Json?
  user                      user    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_settings_user")
}

model notice_board {
  id         Int               @id @default(autoincrement())
  title      String            @db.VarChar(255)
  content    String            @db.Text
  author_id  Int
  created_at DateTime          @default(now()) @db.DateTime(0)
  type       notice_board_type
  updated_at DateTime?         @default(now()) @db.Timestamp(0)
  user       user              @relation(fields: [author_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "notice_board_ibfk_1")

  @@index([author_id], map: "author_id")
}

model ad_spending {
  id                  Int              @id @default(autoincrement())
  user_id             Int
  url_code_setting_id Int
  ad_spend            Int
  spend_date          DateTime         @db.Date
  created_at          DateTime?        @default(now()) @db.Timestamp(0)
  url_code_setting    url_code_setting @relation(fields: [url_code_setting_id], references: [id], onDelete: Cascade, map: "fk_url_code_setting")
  user                user             @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "fk_user")

  @@index([url_code_setting_id], map: "fk_url_code_setting")
  @@index([user_id], map: "fk_user")
}

enum notice_board_type {
  NOTICE
  GENERAL
}
